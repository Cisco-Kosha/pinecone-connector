{
  "openapi": "3.0.0",
  "info": {
    "title": "Pinecone API",
    "version": "1.0.0",
    "description": "This is the API documentation for Pinecone, a vector database service."
  },
  "servers": [{
    "url": "/"
  }],
  "paths": {
    "/describe_index_stats": {
      "post": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Get statistics about an index's contents",
        "description": "Returns statistics about the index's contents, including the vector count per namespace and the number of dimensions.",
        "operationId": "describeIndexStats",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "index_name": {
                    "type": "string",
                    "description": "The name of the index for which to get statistics",
                    "example": "my_index"
                  },
                  "project_id": {
                    "type": "string",
                    "description": "The ID of the project that the index belongs to",
                    "example": "my_project"
                  },
                  "environment": {
                    "type": "string",
                    "description": "The environment of the server to use (e.g. \"prod\" or \"staging\")",
                    "example": "prod"
                  }
                },
                "required": [
                  "index_name",
                  "project_id",
                  "environment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "namespace_stats": {
                      "type": "object",
                      "description": "Statistics for each namespace in the index",
                      "example": {
                        "my_namespace": {
                          "vector_count": 10000,
                          "dimension": 64
                        },
                        "my_other_namespace": {
                          "vector_count": 5000,
                          "dimension": 128
                        }
                      }
                    },
                    "index_stats": {
                      "type": "object",
                      "description": "Statistics for the entire index",
                      "example": {
                        "vector_count": 15000,
                        "dimension": 64
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/query": {
      "post": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Search for similar vectors in a namespace",
        "description": "Searches a namespace using a query vector and retrieves the IDs of the most similar items, along with their similarity scores.",
        "operationId": "query",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "index_name": {
                    "type": "string",
                    "description": "The name of the index to search in",
                    "example": "my_index"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The namespace to search in",
                    "example": "my_namespace"
                  },
                  "query_vector": {
                    "type": "array",
                    "description": "The query vector to search for",
                    "example": [
                      0.1,
                      0.2,
                      0.3
                    ],
                    "items": {
                      "type": "number"
                    }
                  },
                  "top_k": {
                    "type": "integer",
                    "description": "The maximum number of results to return",
                    "example": 10
                  }
                },
                "required": [
                  "index_name",
                  "namespace",
                  "query_vector",
                  "top_k"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "The list of most similar item IDs and their scores",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the item",
                            "example": "my_item_id"
                          },
                          "score": {
                            "type": "number",
                            "description": "The similarity score of the item compared to the query vector",
                            "example": 0.8
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vectors/delete": {
      "post": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Delete vectors by ID from a namespace",
        "description": "Deletes vectors by their ID from a single namespace.",
        "operationId": "deleteVectors",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "index_name": {
                    "type": "string",
                    "description": "The name of the index that contains the namespace to delete vectors from.",
                    "example": "my_index"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The name of the namespace to delete vectors from.",
                    "example": "my_namespace"
                  },
                  "ids": {
                    "type": "array",
                    "description": "The IDs of the vectors to delete.",
                    "example": [
                      "id1",
                      "id2",
                      "id3"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "index_name",
                  "namespace",
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vectors/fetch": {
      "get": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Fetch vectors by ID from a namespace",
        "description": "Fetches vectors by their ID from a single namespace.",
        "operationId": "fetchVectors",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "The namespace to fetch vectors from.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "my_namespace"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "The IDs of the vectors to fetch.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": [
                  "id1",
                  "id2",
                  "id3"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vectors": {
                      "type": "array",
                      "description": "The list of requested vectors",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the vector",
                            "example": "my_vector_id"
                          },
                          "data": {
                            "type": "array",
                            "description": "The vector data",
                            "items": {
                              "type": "number"
                            },
                            "example": [
                              0.1,
                              0.2,
                              0.3
                            ]
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata associated with the vector",
                            "example": {
                              "key1": "value1",
                              "key2": "value2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vectors/update": {
      "post": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Update vectors in a namespace",
        "description": "Updates vectors by their ID in a single namespace.",
        "operationId": "updateVectors",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "namespace",
                  "vectors"
                ],
                "properties": {
                  "namespace": {
                    "type": "string",
                    "description": "The namespace to update vectors in.",
                    "example": "my_namespace"
                  },
                  "vectors": {
                    "type": "array",
                    "description": "The list of vectors to update",
                    "items": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the vector to update.",
                          "example": "my_vector_id"
                        },
                        "data": {
                          "type": "array",
                          "description": "The vector data to update. If not present, the vector data will not be updated.",
                          "items": {
                            "type": "number"
                          },
                          "example": [
                            0.1,
                            0.2,
                            0.3
                          ]
                        },
                        "set_metadata": {
                          "type": "object",
                          "description": "Additional metadata to set or update for the vector. If not present, the metadata will not be updated.",
                          "example": {
                            "key1": "value1",
                            "key2": "value2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vectors/upsert": {
      "post": {
        "tags": [
          "Vector Operations"
        ],
        "summary": "Upsert vectors into a namespace",
        "description": "Writes vectors into a single namespace. If a new value is upserted for an existing vector ID, it will overwrite the previous value.",
        "operationId": "upsertVectors",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "namespace",
                  "vectors"
                ],
                "properties": {
                  "namespace": {
                    "type": "string",
                    "description": "The namespace to upsert vectors into.",
                    "example": "my_namespace"
                  },
                  "vectors": {
                    "type": "array",
                    "description": "The list of vectors to upsert",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "data"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the vector to upsert.",
                          "example": "my_vector_id"
                        },
                        "data": {
                          "type": "array",
                          "description": "The vector data to upsert.",
                          "items": {
                            "type": "number"
                          },
                          "example": [
                            0.1,
                            0.2,
                            0.3
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Additional metadata to associate with the vector.",
                          "example": {
                            "key1": "value1",
                            "key2": "value2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Get a list of Pinecone collections",
        "description": "Returns a list of all Pinecone collections associated with the current user.",
        "operationId": "getCollections",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the collection.",
                        "example": "my_collection"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date and time of the collection.",
                        "example": "2021-07-01T12:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date and time of the collection.",
                        "example": "2021-07-02T12:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Create a Pinecone collection",
        "description": "Creates a new Pinecone collection associated with the current user.",
        "operationId": "createCollection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the collection to create.",
                    "example": "my_collection"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the newly created collection.",
                      "example": "my_collection"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date and time of the collection.",
                      "example": "2021-07-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last update date and time of the collection.",
                      "example": "2021-07-01T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/collections/{collectionName}": {
      "get": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Get information about a Pinecone collection",
        "description": "Returns information about the specified Pinecone collection associated with the current user.",
        "operationId": "describeCollection",
        "parameters": [
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "description": "The name of the collection to describe.",
            "schema": {
              "type": "string",
              "example": "my_collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the collection.",
                      "example": "my_collection"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date and time of the collection.",
                      "example": "2021-07-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last update date and time of the collection.",
                      "example": "2021-07-02T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Delete a Pinecone collection",
        "description": "Deletes the specified Pinecone collection associated with the current user.",
        "operationId": "deleteCollection",
        "parameters": [
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "description": "The name of the collection to delete.",
            "schema": {
              "type": "string",
              "example": "my_collection"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/databases": {
      "get": {
        "tags": [
          "Index Operations"
        ],
        "summary": "List Pinecone indexes",
        "description": "Returns a list of all the Pinecone indexes associated with the current user.",
        "operationId": "listIndexes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "databases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the index.",
                            "example": "my_index"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date and time of the index.",
                            "example": "2021-07-01T12:00:00Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update date and time of the index.",
                            "example": "2021-07-02T12:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Create a Pinecone index",
        "description": "Creates a new Pinecone index associated with the current user.",
        "operationId": "createIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the index to create.",
                    "example": "my_index"
                  },
                  "dimension": {
                    "type": "integer",
                    "description": "The dimension of the vectors to be stored in the index.",
                    "example": 128
                  },
                  "metric": {
                    "type": "string",
                    "description": "The measure of similarity to use for the index.",
                    "example": "euclidean"
                  },
                  "replicas": {
                    "type": "integer",
                    "description": "The number of replicas to use for the index.",
                    "example": 1
                  }
                },
                "required": [
                  "name",
                  "dimension",
                  "metric",
                  "replicas"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the created index.",
                      "example": "my_index"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date and time of the index.",
                      "example": "2021-07-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last update date and time of the index.",
                      "example": "2021-07-02T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/databases/{indexName}": {
      "get": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Describe a Pinecone index",
        "description": "Returns a description of the specified Pinecone index associated with the current user.",
        "operationId": "describeIndex",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "required": true,
            "description": "The name of the index to describe.",
            "schema": {
              "type": "string",
              "example": "my_index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the index.",
                      "example": "my_index"
                    },
                    "dimension": {
                      "type": "integer",
                      "description": "The dimension of the vectors stored in the index.",
                      "example": 128
                    },
                    "metric": {
                      "type": "string",
                      "description": "The measure of similarity used for the index.",
                      "example": "euclidean"
                    },
                    "replicas": {
                      "type": "integer",
                      "description": "The number of replicas used for the index.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date and time of the index.",
                      "example": "2021-07-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last update date and time of the index.",
                      "example": "2021-07-02T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Index Operations"
        ],
        "summary": "Delete a Pinecone index",
        "description": "Deletes the specified Pinecone index associated with the current user.",
        "operationId": "deleteIndex",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "required": true,
            "description": "The name of the index to delete.",
            "schema": {
              "type": "string",
              "example": "my_index"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
